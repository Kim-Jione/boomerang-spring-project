<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.bumerang.domain.admin.AdminDao">

    <select id="findUserList" resultType="com.example.bumerang.web.dto.response.admin.UserListDto">
        SELECT *
        FROM user
    </select>

    <select id="findJobList" resultType="com.example.bumerang.web.dto.response.admin.JobListDto">
        SELECT j.*, COUNT(v.view_id) AS job_view
        FROM job_search j
                 LEFT JOIN VIEW v
                           ON j.job_id = v.job_id
        GROUP BY j.job_id
    </select>

    <select id="findPfList" resultType="com.example.bumerang.web.dto.response.admin.PfListDto">
        SELECT p.*, COUNT(v.view_id) AS pf_view
        FROM performance p
                 LEFT JOIN VIEW v
                           ON p.pf_id = v.pf_id
        GROUP BY p.pf_id
    </select>

    <select id="findNoticeList" resultType="com.example.bumerang.web.dto.response.admin.NoticeListDto">
        SELECT *
        FROM notice
    </select>

    <select id="findByUserId" resultType="com.example.bumerang.web.dto.response.admin.UserRespDto">
        SELECT *
        FROM user u
                 LEFT JOIN (
            SELECT *, GROUP_CONCAT(uf_title) AS uf_titles
            FROM user_field
            WHERE user_id = #{userId}
        ) uf
                           ON u.user_id = uf.user_id
        WHERE u.user_id=#{userId}
    </select>

    <update id="updateUser">
        UPDATE user
        SET
            user_email = #{userEmail},
            user_nickname = #{userNickname},
            user_gender = #{userGender},
            user_height = #{userHeight},
            user_form = #{userForm},
            user_tone = #{userTone},
            user_age = #{userAge},
            user_career = #{userCareer},
            user_skill = #{userSkill},
            user_education = #{userEducation},
            user_contact_link = #{userContactLink},
            user_status = #{userStatus},
            user_role = #{userRole}
        WHERE
            user_id = #{userId}
    </update>

    <update id="deleteUser">
        UPDATE user
        SET
            user_status = 'deleted'
        WHERE
            user_id = #{userId}
    </update>

    <select id="findByJobId" resultType="com.example.bumerang.web.dto.response.admin.JobDetailDto">
        SELECT j.*,
               (SELECT GROUP_CONCAT(jp.job_position_title) FROM job_search_position jp WHERE jp.job_id = j.job_id) as jobPositionTitles
        FROM job_search j
        WHERE j.job_id = ${jobId}
    </select>

    <update id="updateJob">
        UPDATE job_search
        SET
            job_content_title = #{jobContentTitle},
            job_content = #{jobContent},
            job_genre = #{jobGenre},
            job_art_title = #{jobArtTitle},
            job_start_date = #{jobStartDate},
            job_production_date = #{jobProductionDate},
            job_to = #{jobTo},
            job_pay = #{jobPay},
            job_gender = #{jobGender},
            job_contact = #{jobContact},
            job_deadline = #{jobDeadline},
            job_status = #{jobStatus}
        WHERE
            job_id = #{jobId}
    </update>

    <insert id="insertJobPosition">
        INSERT INTO job_search_position (job_position_title, job_id)
        VALUES (#{jobPositionTitle}, #{jobId})
    </insert>

    <select id="findByJobPosition" resultType="String">
        SELECT jsp.job_position_title
        FROM job_search_position jsp
        WHERE jsp.job_id = #{jobId}
    </select>

    <delete id="deleteJobPosition">
        DELETE FROM job_search_position
        WHERE job_id = #{jobId}
    </delete>


    <update id="deleteNotice">
        DELETE FROM notice
        WHERE notice_id = ${noticeId};
    </update>

    <update id="deleteJob">
        UPDATE job_search
        SET
            job_status = 'deleted'
        WHERE
            job_id = #{jobId}
    </update>

    <select id="findByPfId" resultType="com.example.bumerang.web.dto.response.admin.PfDetailDto">
        SELECT *
        FROM performance p
        WHERE p.pf_id = #{pfId}
    </select>

    <update id="updatePf">
        UPDATE performance
        SET
            pf_title = #{pfTitle},
            pf_content = #{pfContent},
            pf_agerating = #{pfAgerating},
            pf_start_date = #{pfStartDate},
            pf_deadline = #{pfDeadline},
            pf_bookingmethod = #{pfBookingmethod},
            pf_production = #{pfProduction},
            pf_location = #{pfLocation},
            pf_runningtime = #{pfRunningtime},
            pf_price = #{pfPrice},
            pf_genre = #{pfGenre},
            pf_thumbnail = #{pfThumbnail},
            pf_status = #{pfStatus}
        WHERE
            pf_id = #{pfId}
    </update>

    <update id="deletePf">
        UPDATE performance
        SET
            pf_status = 'deleted'
        WHERE
            pf_id = #{pfId}
    </update>

    <select id="findByNoticeId" resultType="com.example.bumerang.web.dto.response.admin.NoticeDetailDto">
        SELECT *
        FROM notice n
        WHERE n.notice_id = #{noticeId}
    </select>

    <select id="findReportJobList" resultType="com.example.bumerang.web.dto.response.admin.JobListDto">
        SELECT j.*, r.*, r.created_at AS reportCreatedAt
        FROM (SELECT * FROM report r WHERE r.job_id IS NOT NULL) r
                 LEFT JOIN (SELECT j.*, COUNT(v.view_id) AS job_view
                            FROM job_search j
                                     LEFT JOIN VIEW v
                                               ON j.job_id = v.job_id
                            GROUP BY j.job_id) j ON r.job_id = j.job_id
        ORDER BY j.created_at DESC
    </select>

    <select id="findReportPfList" resultType="com.example.bumerang.web.dto.response.admin.PfListDto">
        SELECT p.*, r.*, r.created_at AS reportCreatedAt
        FROM (SELECT * FROM report r WHERE r.pf_id IS NOT NULL) r
                 LEFT JOIN (
            SELECT p.*, COUNT(v.view_id) AS pf_view
            FROM performance p
                     LEFT JOIN VIEW v
                               ON p.pf_id = v.pf_id
            GROUP BY p.pf_id) p
                           ON r.pf_id = p.pf_id
        ORDER BY r.created_at DESC
    </select>

    <select id="findReportCommentList" resultType="com.example.bumerang.web.dto.response.admin.CommentListDto">
        SELECT r.*, c.*, r.created_at AS reportCreatedAt
        FROM (SELECT * FROM report r WHERE r.comment_id IS NOT NULL) r
                 LEFT JOIN comment c
                           ON r.comment_id = c.comment_id
        ORDER BY r.created_at DESC
    </select>

    <update id="deleteComment">
        UPDATE comment
        SET
            comment_status = 'deleted'
        WHERE
            comment_id = #{commentId}
    </update>

    <select id="findByCommentId" resultType="com.example.bumerang.web.dto.response.admin.CommentDetailDto">
        SELECT *
        FROM comment c
        WHERE c.comment_id = #{commentId}
    </select>

    <select id="findByGenreJob" resultType="com.example.bumerang.web.dto.response.admin.JSGenreDto">
        SELECT job_genre, COUNT(*) AS genre_count
        FROM job_search
        GROUP BY job_genre
    </select>

    <select id="findByGenrePf" resultType="com.example.bumerang.web.dto.response.admin.PfGenreDto">
        SELECT pf_genre, COUNT(*) AS genre_count
        FROM performance
        GROUP BY pf_genre
    </select>

    <select id="findAllPost" resultType="com.example.bumerang.web.dto.response.admin.PostListDto">
        SELECT
            job_id AS content_id,
            job_content_title AS title,
            (
                SELECT COUNT(*)
                FROM view
                WHERE job_id = job_search.job_id
            ) AS view_count,
            job_genre AS genre,
            job_status AS status,
            created_at,
            'job' AS type
        FROM job_search
        UNION
        SELECT
            pf_id AS content_id,
            pf_title AS title,
            (
                SELECT COUNT(*)
                FROM view
                WHERE pf_id = performance.pf_id
            ) AS view_count,
            pf_genre AS genre,
            pf_status AS status,
            created_at,
            'performance' AS type
        FROM performance
        ORDER BY created_at DESC
    </select>

    <select id="findByView" resultType="com.example.bumerang.web.dto.response.admin.ViewListDto">
        WITH Days AS (
            SELECT CURDATE() - INTERVAL (n - 1) DAY AS day
        FROM (
            SELECT 1 AS n UNION ALL
            SELECT 2 UNION ALL
            SELECT 3 UNION ALL
            SELECT 4 UNION ALL
            SELECT 5 UNION ALL
            SELECT 6 UNION ALL
            SELECT 7
            ) AS Numbers
            )

        SELECT
            CURDATE() AS day,
    (
        SELECT COALESCE(COUNT(v1.view_id), 0)
        FROM view v1
        WHERE v1.job_id IS NOT NULL AND DATE(v1.created_at) = CURDATE()
    ) + (
        SELECT COALESCE(COUNT(v2.view_id), 0)
        FROM view v2
        WHERE v2.pf_id IS NOT NULL AND DATE(v2.created_at) = CURDATE()
    ) AS dailyView,
    SUM(
        (
            SELECT COALESCE(COUNT(v1.view_id), 0)
            FROM view v1
            WHERE v1.job_id IS NOT NULL AND DATE(v1.created_at) = d.day
        ) + (
            SELECT COALESCE(COUNT(v2.view_id), 0)
            FROM view v2
            WHERE v2.pf_id IS NOT NULL AND DATE(v2.created_at) = d.day
        )
    ) AS weeklyView
        FROM Days d
        WHERE d.day >= CURDATE() - INTERVAL 6 DAY;
    </select>

    <select id="findByExit" resultType="com.example.bumerang.web.dto.response.admin.ExitListDto">
        SELECT
            COALESCE(
                    (SELECT COUNT(*)
                     FROM user
                     WHERE DATE(updated_at) = CURDATE() AND user_status = 'deleted'
                    GROUP BY DATE(updated_at)
                ),
        0
    ) AS dailyExitCount,
            COALESCE(
                    (SELECT COUNT(*)
                     FROM user
                     WHERE YEARWEEK(updated_at, 1) = YEARWEEK(NOW(), 1) AND user_status = 'deleted'
                     GROUP BY YEARWEEK(updated_at, 1)
                    ),
                    0
                ) AS weeklyExitCount;

    </select>

    <select id="jsDailyOfWeekViews" resultType="com.example.bumerang.web.dto.response.admin.ViewYAxisDto">
        WITH Days AS (
            SELECT CURDATE() - INTERVAL (n - 1) DAY AS day
        FROM (
            SELECT 1 AS n UNION ALL
            SELECT 2 UNION ALL
            SELECT 3 UNION ALL
            SELECT 4 UNION ALL
            SELECT 5 UNION ALL
            SELECT 6 UNION ALL
            SELECT 7
            ) AS Numbers
            )

        SELECT
            d.day,
            COALESCE(COUNT(v.view_id), 0) AS dailyView
        FROM Days d
                 LEFT JOIN view v ON v.job_id IS NOT NULL AND DATE(v.created_at) = d.day
        WHERE d.day >= CURDATE() - INTERVAL 6 DAY
        GROUP BY d.day
        ORDER BY d.day;
    </select>

    <select id="jsMonthlyOfViews" resultType="com.example.bumerang.web.dto.response.admin.ViewYAxisDto">
        SELECT DATE_FORMAT(view.created_at, '%Y-%m') AS month,
    COUNT(*) AS monthView
        FROM
            job_search
            JOIN
            view
        ON job_search.job_id = view.job_id
        WHERE
            view.created_at >= DATE_SUB(CURDATE()
            , INTERVAL 6 MONTH)
        GROUP BY
            DATE_FORMAT(view.created_at, '%Y-%m')
        ORDER BY
            month;
    </select>

    <select id="pfDailyOfWeekViews" resultType="com.example.bumerang.web.dto.response.admin.ViewYAxisDto">
        WITH Days AS (
            SELECT CURDATE() - INTERVAL (n - 1) DAY AS day
        FROM (
            SELECT 1 AS n UNION ALL
            SELECT 2 UNION ALL
            SELECT 3 UNION ALL
            SELECT 4 UNION ALL
            SELECT 5 UNION ALL
            SELECT 6 UNION ALL
            SELECT 7
            ) AS Numbers
            )

        SELECT
            d.day,
            COALESCE(COUNT(v.view_id), 0) AS dailyView
        FROM Days d
                 LEFT JOIN view v ON v.pf_id IS NOT NULL AND DATE(v.created_at) = d.day
        WHERE d.day >= CURDATE() - INTERVAL 6 DAY
        GROUP BY d.day
        ORDER BY d.day;
    </select>

    <select id="pfMonthlyOfViews" resultType="com.example.bumerang.web.dto.response.admin.ViewYAxisDto">
        SELECT DATE_FORMAT(view.created_at, '%Y-%m') AS month,
       COUNT(*)                              AS monthView
        FROM performance
            JOIN
            view
        ON performance.pf_id = view.pf_id
        WHERE view.created_at >= DATE_SUB(CURDATE()
            , INTERVAL 6 MONTH)
        GROUP BY DATE_FORMAT(view.created_at, '%Y-%m')
        ORDER BY month;
    </select>

    <select id="findBySignup" resultType="com.example.bumerang.web.dto.response.admin.SignupDto">
        WITH months AS (
            SELECT DATE_FORMAT(NOW(), '%Y-%m') AS month
        UNION ALL
        SELECT DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 1 MONTH), '%Y-%m')
        UNION ALL
        SELECT DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 2 MONTH), '%Y-%m')
        UNION ALL
        SELECT DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 3 MONTH), '%Y-%m')
        UNION ALL
        SELECT DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 4 MONTH), '%Y-%m')
        UNION ALL
        SELECT DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 5 MONTH), '%Y-%m')
        UNION ALL
        SELECT DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 6 MONTH), '%Y-%m')
        UNION ALL
        SELECT DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 7 MONTH), '%Y-%m')
        UNION ALL
        SELECT DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 8 MONTH), '%Y-%m')
        UNION ALL
        SELECT DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 9 MONTH), '%Y-%m')
        UNION ALL
        SELECT DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 10 MONTH), '%Y-%m')
        UNION ALL
        SELECT DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 11 MONTH), '%Y-%m')
            )

-- 사용자 데이터와 결합
        SELECT
            m.month AS month,
    COALESCE(COUNT(u.created_at), 0) AS monthSignupCount
        FROM months m
            LEFT JOIN user u ON DATE_FORMAT(u.created_at, '%Y-%m') = m.month
        GROUP BY m.month
        ORDER BY m.month;
    </select>

    <select id="boardCountOfWeek" resultType="com.example.bumerang.web.dto.response.admin.BoardCountOfWeekDto">
        WITH days AS (
            SELECT DATE_FORMAT(NOW(), '%Y-%m-%d') AS day
        UNION ALL
        SELECT DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 1 DAY), '%Y-%m-%d')
        UNION ALL
        SELECT DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 2 DAY), '%Y-%m-%d')
        UNION ALL
        SELECT DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 3 DAY), '%Y-%m-%d')
        UNION ALL
        SELECT DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 4 DAY), '%Y-%m-%d')
        UNION ALL
        SELECT DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 5 DAY), '%Y-%m-%d')
        UNION ALL
        SELECT DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 6 DAY), '%Y-%m-%d')
            )

        SELECT
            d.day AS day,
        COALESCE(SUM(num_of_posts), 0) AS numOfPosts
        FROM days d
            LEFT JOIN (
            SELECT DATE(post_created_at) AS day, COUNT(*) AS num_of_posts
            FROM (
            SELECT job_id, created_at AS post_created_at FROM job_search
            UNION ALL
            SELECT pf_id, created_at AS post_created_at FROM performance
            ) AS all_posts
            WHERE DATE(post_created_at) >= DATE_SUB(NOW(), INTERVAL 7 DAY)
            GROUP BY day
            ) AS posts ON d.day = posts.day
        GROUP BY d.day
        ORDER BY d.day;
    </select>
    <update id="findReportJobListUpdate">
        UPDATE report
        SET
        report_status = 'deleted'
        WHERE
        report_id = #{reportId}
    </update>
</mapper>